//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoyVaro
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AcuerdoPago> AcuerdoPago { get; set; }
        public virtual DbSet<AjusteDocumental> AjusteDocumental { get; set; }
        public virtual DbSet<AjusteFisico> AjusteFisico { get; set; }
        public virtual DbSet<AlertaDocumentoCredito> AlertaDocumentoCredito { get; set; }
        public virtual DbSet<AplicacionPago> AplicacionPago { get; set; }
        public virtual DbSet<Archivo> Archivo { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<AvaluoCastigo> AvaluoCastigo { get; set; }
        public virtual DbSet<Banco> Banco { get; set; }
        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ClienteSesion> ClienteSesion { get; set; }
        public virtual DbSet<ClienteWeb> ClienteWeb { get; set; }
        public virtual DbSet<ComentarioEventos> ComentarioEventos { get; set; }
        public virtual DbSet<ComentariosCredito> ComentariosCredito { get; set; }
        public virtual DbSet<CompaniaSeguro> CompaniaSeguro { get; set; }
        public virtual DbSet<Condonacion> Condonacion { get; set; }
        public virtual DbSet<Credito> Credito { get; set; }
        public virtual DbSet<CrucePagoMensualidad> CrucePagoMensualidad { get; set; }
        public virtual DbSet<CuentasPagos> CuentasPagos { get; set; }
        public virtual DbSet<DetalleDePago> DetalleDePago { get; set; }
        public virtual DbSet<dias_no_laborales> dias_no_laborales { get; set; }
        public virtual DbSet<DispositivoDeInmovilizacion> DispositivoDeInmovilizacion { get; set; }
        public virtual DbSet<Dispositivos> Dispositivos { get; set; }
        public virtual DbSet<DocumentacionCredito> DocumentacionCredito { get; set; }
        public virtual DbSet<DocumentacionCreditoDetalle> DocumentacionCreditoDetalle { get; set; }
        public virtual DbSet<DocumentacionRequerida> DocumentacionRequerida { get; set; }
        public virtual DbSet<EmpresaInmovilizadora> EmpresaInmovilizadora { get; set; }
        public virtual DbSet<EmpresaUbicacion> EmpresaUbicacion { get; set; }
        public virtual DbSet<Esquema> Esquema { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Estado_civil> Estado_civil { get; set; }
        public virtual DbSet<EstadoAlertaDocumento> EstadoAlertaDocumento { get; set; }
        public virtual DbSet<EstadoDocumentoCredito> EstadoDocumentoCredito { get; set; }
        public virtual DbSet<EstadoSolicitudCotizacion> EstadoSolicitudCotizacion { get; set; }
        public virtual DbSet<EstatusCobranza> EstatusCobranza { get; set; }
        public virtual DbSet<EstatusCondonacion> EstatusCondonacion { get; set; }
        public virtual DbSet<EstatusDispositivo> EstatusDispositivo { get; set; }
        public virtual DbSet<EstatusPolitica> EstatusPolitica { get; set; }
        public virtual DbSet<Etiqueta> Etiqueta { get; set; }
        public virtual DbSet<EtiquetasPolitica> EtiquetasPolitica { get; set; }
        public virtual DbSet<EventoCredito> EventoCredito { get; set; }
        public virtual DbSet<Expediente> Expediente { get; set; }
        public virtual DbSet<FacturaInteresesDebengados> FacturaInteresesDebengados { get; set; }
        public virtual DbSet<HistorialDeCobro> HistorialDeCobro { get; set; }
        public virtual DbSet<HistorialEstadoCobranza> HistorialEstadoCobranza { get; set; }
        public virtual DbSet<HistoricoAnalisisDeCartera> HistoricoAnalisisDeCartera { get; set; }
        public virtual DbSet<InteresAplazado> InteresAplazado { get; set; }
        public virtual DbSet<LA_Anios> LA_Anios { get; set; }
        public virtual DbSet<LA_ControlPorcentajeAvaluo> LA_ControlPorcentajeAvaluo { get; set; }
        public virtual DbSet<LA_HistotialConsulastas> LA_HistotialConsulastas { get; set; }
        public virtual DbSet<LA_Marcas> LA_Marcas { get; set; }
        public virtual DbSet<LA_MarcasPorAnio> LA_MarcasPorAnio { get; set; }
        public virtual DbSet<LA_Modelos> LA_Modelos { get; set; }
        public virtual DbSet<LA_ModelosXMarcaAnio> LA_ModelosXMarcaAnio { get; set; }
        public virtual DbSet<LA_PaqueteConsultas> LA_PaqueteConsultas { get; set; }
        public virtual DbSet<LA_Version> LA_Version { get; set; }
        public virtual DbSet<ListaNegra> ListaNegra { get; set; }
        public virtual DbSet<Manuales> Manuales { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Mensualidad> Mensualidad { get; set; }
        public virtual DbSet<MensualidadPago> MensualidadPago { get; set; }
        public virtual DbSet<Modelo> Modelo { get; set; }
        public virtual DbSet<Mora> Mora { get; set; }
        public virtual DbSet<Municipio> Municipio { get; set; }
        public virtual DbSet<Observacion> Observacion { get; set; }
        public virtual DbSet<ObservacionDocumentoArchivoDetalle> ObservacionDocumentoArchivoDetalle { get; set; }
        public virtual DbSet<PagoSeguro> PagoSeguro { get; set; }
        public virtual DbSet<Pension> Pension { get; set; }
        public virtual DbSet<Pensionado> Pensionado { get; set; }
        public virtual DbSet<Politica> Politica { get; set; }
        public virtual DbSet<PromesaPago> PromesaPago { get; set; }
        public virtual DbSet<Promocion> Promocion { get; set; }
        public virtual DbSet<PromocionSucursal> PromocionSucursal { get; set; }
        public virtual DbSet<Referencia> Referencia { get; set; }
        public virtual DbSet<Renovacion> Renovacion { get; set; }
        public virtual DbSet<ReporteEsperanzaDeCobro> ReporteEsperanzaDeCobro { get; set; }
        public virtual DbSet<RepresentanteLegal> RepresentanteLegal { get; set; }
        public virtual DbSet<Right> Right { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<SeguimientoPolitica> SeguimientoPolitica { get; set; }
        public virtual DbSet<Seguro> Seguro { get; set; }
        public virtual DbSet<Settings> Settings { get; set; }
        public virtual DbSet<SolicitudCotizacion> SolicitudCotizacion { get; set; }
        public virtual DbSet<Submarca> Submarca { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tbl_Candidato> Tbl_Candidato { get; set; }
        public virtual DbSet<tbl_categoria> tbl_categoria { get; set; }
        public virtual DbSet<Tbl_estatus> Tbl_estatus { get; set; }
        public virtual DbSet<Tbl_Oferta> Tbl_Oferta { get; set; }
        public virtual DbSet<Tbl_perfilLaboral> Tbl_perfilLaboral { get; set; }
        public virtual DbSet<Tbl_User> Tbl_User { get; set; }
        public virtual DbSet<Temp_pagos> Temp_pagos { get; set; }
        public virtual DbSet<test> test { get; set; }
        public virtual DbSet<TipoCargo> TipoCargo { get; set; }
        public virtual DbSet<TipoCondonacion> TipoCondonacion { get; set; }
        public virtual DbSet<TipoDeArchivo> TipoDeArchivo { get; set; }
        public virtual DbSet<TipoDeCliente> TipoDeCliente { get; set; }
        public virtual DbSet<TipoDeCredito> TipoDeCredito { get; set; }
        public virtual DbSet<TipoDetallePago> TipoDetallePago { get; set; }
        public virtual DbSet<TipoEstatusCredito> TipoEstatusCredito { get; set; }
        public virtual DbSet<TipoPago> TipoPago { get; set; }
        public virtual DbSet<TipoRegitroListaNegra> TipoRegitroListaNegra { get; set; }
        public virtual DbSet<TipoReporteListaNegra> TipoReporteListaNegra { get; set; }
        public virtual DbSet<TipoTransmision> TipoTransmision { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UsuarioRecomendados> UsuarioRecomendados { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<ISR> ISR { get; set; }
        public virtual DbSet<Fin_EstadoSolicitud> Fin_EstadoSolicitud { get; set; }
        public virtual DbSet<Fin_TipoSolicitud> Fin_TipoSolicitud { get; set; }
        public virtual DbSet<Fit_Cliente> Fit_Cliente { get; set; }
        public virtual DbSet<Fit_Vehiculo> Fit_Vehiculo { get; set; }
        public virtual DbSet<PagosFactoring> PagosFactoring { get; set; }
        public virtual DbSet<Fin_Solicitud> Fin_Solicitud { get; set; }
        public virtual DbSet<Calendario> Calendario { get; set; }
        public virtual DbSet<Fin_Cita> Fin_Cita { get; set; }
        public virtual DbSet<Fin_DocumentacionSolicitud> Fin_DocumentacionSolicitud { get; set; }
        public virtual DbSet<Fin_DocumentacionSolicitudDetalle> Fin_DocumentacionSolicitudDetalle { get; set; }
        public virtual DbSet<ControlDeCambios> ControlDeCambios { get; set; }
        public virtual DbSet<TipoCambio> TipoCambio { get; set; }
        public virtual DbSet<ContactoWeb> ContactoWeb { get; set; }
        public virtual DbSet<ObservacionSolicitud> ObservacionSolicitud { get; set; }
        public virtual DbSet<ObservacionCotizacion> ObservacionCotizacion { get; set; }
        public virtual DbSet<CuentasTerceros> CuentasTerceros { get; set; }
        public virtual DbSet<PagosFactoringDescuentoCartera> PagosFactoringDescuentoCartera { get; set; }
        public virtual DbSet<PagosTerceros> PagosTerceros { get; set; }
        public virtual DbSet<TipoNotificacion> TipoNotificacion { get; set; }
        public virtual DbSet<UserNotificacion> UserNotificacion { get; set; }
        public virtual DbSet<PlantillaWeb> PlantillaWeb { get; set; }
        public virtual DbSet<PlantillaWebItem> PlantillaWebItem { get; set; }
        public virtual DbSet<PlantillaWebItemDetalle> PlantillaWebItemDetalle { get; set; }
        public virtual DbSet<TipoItemWeb> TipoItemWeb { get; set; }
    
        [DbFunction("Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string texto, string delimitador)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var delimitadorParameter = delimitador != null ?
                new ObjectParameter("Delimitador", delimitador) :
                new ObjectParameter("Delimitador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[Entities].[Split](@Texto, @Delimitador)", textoParameter, delimitadorParameter);
        }
    
        public virtual ObjectResult<PAResumenDeCobros_Result> PAResumenDeCobros(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<decimal> iVA)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PAResumenDeCobros_Result>("PAResumenDeCobros", fechaInicioParameter, fechaFinParameter, iVAParameter);
        }
    
        public virtual ObjectResult<ResumenDeCobros_Result> ResumenDeCobros(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<decimal> iVA)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var iVAParameter = iVA.HasValue ?
                new ObjectParameter("IVA", iVA) :
                new ObjectParameter("IVA", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenDeCobros_Result>("ResumenDeCobros", fechaInicioParameter, fechaFinParameter, iVAParameter);
        }
    
        public virtual ObjectResult<ResumenDePagos_Result> ResumenDePagos(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenDePagos_Result>("ResumenDePagos", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<ResumenDePagosDetalle_Result> ResumenDePagosDetalle(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> mora)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var moraParameter = mora.HasValue ?
                new ObjectParameter("mora", mora) :
                new ObjectParameter("mora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenDePagosDetalle_Result>("ResumenDePagosDetalle", fechaInicioParameter, fechaFinParameter, moraParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int uspDeleteCredito(Nullable<int> idCredito)
        {
            var idCreditoParameter = idCredito.HasValue ?
                new ObjectParameter("idCredito", idCredito) :
                new ObjectParameter("idCredito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteCredito", idCreditoParameter);
        }
    }
}
